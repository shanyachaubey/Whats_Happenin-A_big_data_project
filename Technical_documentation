Technical Documentation-Whats Happenin

In this document, the team updates all technical processes that might have to be repeated by team members on different systems. 

1)	Process to connect with google cloud through terminal
a.	Initial google cloud in terminal
b.	Kubectl config view
c.	gcloud container clusters get-credentials what --region us-west2 --project rapid-burner-415905
d.	kubectl port-forward cb-example-0000 8091:8091
e.	Add data to database using add document. 

2)	Setting up environment in vsc:
Tip: If the activate command generates the message "Activate.ps1 is not digitally signed. You cannot run this script on the current system.", then you need to temporarily change the PowerShell execution policy to allow scripts to run (see About Execution Policies in the PowerShell documentation): Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process
 
3)	Getting direnv, then wsl then linux distribution to use direnv:
a.	Direnv: https://gist.github.com/rmtuckerphx/4ace28c1605300462340ffa7b7001c6d
b.	WSL: https://learn.microsoft.com/en-us/windows/wsl/install
c.	Linux distribution, Ubuntu: https://learn.microsoft.com/en-us/windows/wsl/install?source=recommendations
username: shanya
Password: ______ 6 letters, think
In the ubuntu shell, everytime you start, type: sudo apt update && sudo apt upgrade

4)	How to clear the socket when an application is using 8000 port
a.	Error : ERROR:    [WinError 10013] An attempt was made to access a socket in a way forbidden by its access permissions
on Powershell find what process is occupying 8000 port. 
b.	Netstat -ano | findstr :8000
c.	LISTENING xxxxx
d.	Press Ctrl+Shft+Esc
e.	Go to details 
f.	Find the port and end the task

5)	How to update branch and make a pull request using gitbash
Git checkout main
Git pull origin main
Git checkout MLmanager

Git status
Git add .
Git commit -m ‘commit comment’
Git push origin MLmanager
Git status

6)	Commands to run API:
a. 	Open gitbash terminal
b. 	cd Topic_Modeling
c.	source .venv/Scripts/Activate
d.	pip install -r requirements.txt
e.	python api_call_script.py oid

7)	Explanation of MongoDB data before processing:
 
a.	_id (ObjectId): Object Id used to access the MongoDB document
b.	location (str): query parameter used to make API call to newscatcherAPI, need this field to remove unnecessary articles from the data fetched from newscatcher api
c.	articles (List[Dict]): Raw data from newscatcherAPI with all the fields that are fetched, Prateek feel free to call for less fields.

8)	Explanation of MongoDB data after processing:
   

a.	_id (ObjectId): Object Id used to access the MongoDB document
b.	location (str): query parameter used to make API call to newscatcherAPI, need this field to remove unnecessary articles from the data fetched from newscatcher api.
c.	articles (List[Dict]): List of dictionary with processes articles and topics from topic modelling. Each dictionary contains the following keys: rank, location, title, excerpt, summary, link, author, published_date, image_link, topic.
d.	data_for_bubble (Dict): Contains the dictionary with the topics and its respective percentage out of total. Each value in the dictionary would correspond to the size of the bubble in the bubble chart
e.	top_10_by_topics (Dict): Dictionary of the topic name and respective list of indices of top x article in ascending order. One can use these indices to grab articles from “articles” field in MongoDB. This will need to be accessed when the user clicks the topic bubble. Bill will need the articles at these indices and the following keys from each of the article dictionaries: title, link, author, published_date, image_link
f.	top_x_all_cat (List)-Default: List of indices of the top x ranked articles. This is the list that would be used to display the top articles when no topic is chosen. Bill will need the articles at these indices and the following keys from each of the article dictionaries: title, link, author, published_date, image_link




